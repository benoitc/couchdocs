The idea for this plugin type would be a simple notifier that could post a message to an [[http://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol|AMQP]] Exchange whenever a change is made to a database. A server such as [[http://www.rabbitmq.com/|RabbitMQ]] (a fellow noteworthy Erlang project of 2008!) could receive these messages and route them to listening queues in any manner desired. This could be useful for anything from high speed continuous replication between CouchDB instances to updating specialized indexes (such as fulltext or geospatial etc) or anything else one might want to do. This way listening for updates to a document database would be just like listening for any other type of message.

A nice advantage of organizing things this way is that a CouchDB instance would only need to notifiy one application -- the messaging server -- even if 15 applications are listening for updates. Once a description of the database change has been sent to an exchange, CouchDB's work is done and it becomes the messaging server's job to deliver the notification to all the listeners.
